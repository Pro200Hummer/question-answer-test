{"version":3,"sources":["common/components/Input/Input.tsx","state/app-reducer.ts","App.tsx","reportWebVitals.ts","index.tsx","common/styles/commonStyle.module.scss"],"names":["Input","props","id","className","setAnswerCallback","useState","value","setValue","type","placeholder","onChange","e","currentTarget","onBlur","answer","initialState","data","appReducer","state","action","map","s","App","useReducer","dispatch","setNewAnswer","setAnswer","style","wrapper","container","i","item","itemTitle","question","input","onClick","el","localStorage","setItem","setStateToLocalStorage","btnSend","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+MAUaA,EAA4B,SAAAC,GAAU,IAG3CC,EAGAD,EAHAC,GACAC,EAEAF,EAFAE,UACAC,EACAH,EADAG,kBAL0C,EAQpBC,mBAAiB,IARG,mBAQvCC,EARuC,KAQhCC,EARgC,KAkB9C,OAAO,mCACH,uBACID,MAAOA,EACPH,UAAWA,EACXK,KAAK,OACLC,YAAa,6EACbC,SAdiB,SAACC,GACtBJ,EAASI,EAAEC,cAAcN,QAcrBO,OAXc,WAClBT,EAAkB,CAACF,KAAIY,OAAQR,U,OCV1BS,E,KAAgCC,KAIhCC,EAAa,WAAgD,IAA/CC,EAA8C,uDAAtCH,EAAcI,EAAwB,uCACrE,OAAQA,EAAOX,MACX,IAAK,iBACD,OAAOU,EAAME,KAAI,SAAAC,GACb,OAAOA,EAAEnB,KAAOiB,EAAOjB,GAAhB,2BAAyBmB,GAAzB,IAA4BP,OAAQK,EAAOL,SAAUO,KAEpE,QACI,OAAOH,I,gBCrBNI,EAAM,WAAO,IAAD,EAEKC,qBAAWN,EAAYF,GAF5B,mBAEdG,EAFc,KAEPM,EAFO,KAIfC,EAAe,SAACX,GAClBU,EDOiB,SAACV,GAAD,oBAA0BN,KAAM,kBAAqBM,GCP7DY,CAAUZ,KAOvB,OACI,sBAAKX,UAAWwB,IAAMC,QAAtB,UACI,qBAAKzB,UAAWwB,IAAME,UAAtB,SACKX,EAAME,KAAI,SAAAU,GACP,OACI,sBAAK3B,UAAWwB,IAAMI,KAAtB,UACI,qBAEI5B,UAAWwB,IAAMK,UAFrB,SAIKF,EAAEG,UAHEH,EAAE5B,IAKX,cAAC,EAAD,CACIC,UAAWwB,IAAMO,MACjBhC,GAAI4B,EAAE5B,GACNE,kBAAmBqB,YAMvC,wBAAQU,QAzBO,YDiBW,SAACnB,GAEnCA,EAAKI,KAAI,SAAAgB,GAAUA,EAAGtB,QAAQuB,aAAaC,QAAQF,EAAGH,SAAUG,EAAGtB,WClB/DyB,CAAuBrB,IAwBcf,UAAWwB,IAAMa,QAAlD,wECxBGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,QAAU,6BAA6B,UAAY,+BAA+B,KAAO,0BAA0B,UAAY,+BAA+B,MAAQ,2BAA2B,QAAU,+B","file":"static/js/main.1c1fef66.chunk.js","sourcesContent":["import React, {ChangeEvent, FC, useState} from 'react';\r\nimport {AnswerType} from \"../../../state/app-reducer\";\r\n\r\ntype InputPropsType = {\r\n    id: number\r\n    className: string\r\n    setAnswerCallback: (answer: AnswerType) => void\r\n}\r\n\r\n\r\nexport const Input: FC<InputPropsType> = props => {\r\n\r\n    const {\r\n        id,\r\n        className,\r\n        setAnswerCallback,\r\n    } = props\r\n\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.currentTarget.value)\r\n    }\r\n\r\n    const onBlurHandler = () => {\r\n        setAnswerCallback({id, answer: value})\r\n    }\r\n\r\n    return <>\r\n        <input\r\n            value={value}\r\n            className={className}\r\n            type=\"text\"\r\n            placeholder={\"*Введите текст\"}\r\n            onChange={onChangeCallback}\r\n            onBlur={onBlurHandler}/>\r\n    </>\r\n};","import data from './data.json'\r\n\r\nexport type DataType = {\r\n    question: string\r\n    id: number\r\n    answer?: string\r\n}\r\nexport type AnswerType = {\r\n    id: number\r\n    answer?: string\r\n}\r\n\r\ntype ActionsType =\r\n    |ReturnType<typeof setAnswer>\r\n\r\nexport const initialState: DataType[] = data.data\r\n\r\nexport const setAnswer = (answer: AnswerType) => ({type: \"APP/SET_ANSWER\", ...answer} as const)\r\n\r\nexport const appReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"APP/SET_ANSWER\":\r\n            return state.map(s => {\r\n                return s.id === action.id ? {...s, answer: action.answer} : s\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const setStateToLocalStorage = (data: DataType[]) => {\r\n    // eslint-disable-next-line array-callback-return\r\n    data.map(el => {if(el.answer) localStorage.setItem(el.question, el.answer)})\r\n}","import React, {useReducer} from 'react';\r\nimport {Input} from \"./common/components/Input/Input\";\r\nimport {AnswerType, appReducer, initialState, setAnswer, setStateToLocalStorage} from \"./state/app-reducer\";\r\nimport style from './common/styles/commonStyle.module.scss'\r\n\r\nexport const App = () => {\r\n\r\n    const [state, dispatch] = useReducer(appReducer, initialState)\r\n\r\n    const setNewAnswer = (answer: AnswerType) => {\r\n        dispatch(setAnswer(answer))\r\n    }\r\n\r\n    const onClickHandler = () => {\r\n        setStateToLocalStorage(state)\r\n    }\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={style.container}>\r\n                {state.map(i => {\r\n                    return (\r\n                        <div className={style.item}>\r\n                            <div\r\n                                key={i.id}\r\n                                className={style.itemTitle}\r\n                            >\r\n                                {i.question}\r\n                            </div>\r\n                            <Input\r\n                                className={style.input}\r\n                                id={i.id}\r\n                                setAnswerCallback={setNewAnswer}/>\r\n                        </div>\r\n                    )\r\n\r\n                })}\r\n            </div>\r\n            <button onClick={onClickHandler} className={style.btnSend}>Отправить</button>\r\n        </div>\r\n    )\r\n};\r\n\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"commonStyle_wrapper__31kcl\",\"container\":\"commonStyle_container__zSiW0\",\"item\":\"commonStyle_item__3osbK\",\"itemTitle\":\"commonStyle_itemTitle__2wVym\",\"input\":\"commonStyle_input__UEDjL\",\"btnSend\":\"commonStyle_btnSend__3h07v\"};"],"sourceRoot":""}